---
- name: Create a Customer Router Namespace
  hosts: localhost
#  pub_nss: localpub_ns
  gather_facts: no
  # vars_files:
  #   - variables/create_vpc_variables.yml
  vars:
    pub_namespace: demo_public_namespace
    vpc_details:
      - name: rc
        vpcs:
          - vpc_name: vpcrc11
            ep_in_pub: p_vpcid11_p
            ep_in_ns: p_vpcid11_vpc
            pub_ns_ip: 10.10.6.1
            pub_ns_ep_ip: 10.10.6.1/30
            ns_ep_ip: 10.10.6.2/30
            ip: 10.10.6.0/30
          - vpc_name: vpcrc12
            ep_in_pub: p_vpcid12_p
            ep_in_ns: p_vpcid12_vpc
            pub_ns_ip: 10.10.7.1
            pub_ns_ep_ip: 10.10.7.1/30
            ns_ep_ip: 10.10.7.2/30
            ip: 10.10.7.0/30
      - name: c2
        vpcs:
          - vpc_name: vpcpri21
            ep_in_pub: p_vpcid21_p
            ep_in_ns: p_vpcid21_vpc
            pub_ns_ip: 11.11.5.1
            pub_ns_ep_ip: 11.11.5.1/30
            ns_ep_ip: 11.11.5.2/30
            ip: 11.11.5.0/30



  tasks:
    - name: Create Namespaces
      become: yes
      community.general.ip_netns:
        name: "{{ item.1.vpc_name }}"
        state: present
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Creat veth pairs
      become: yes
      ansible.builtin.command: "sudo ip link add {{ item.1.ep_in_pub }} type veth peer name {{ item.1.ep_in_ns }}"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Attach vpc_NS to the ns ends of the veth pairs
      ansible.builtin.command: "sudo ip link set {{item.1.ep_in_ns}} netns {{item.1.vpc_name}}"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Attach public_ns to the ns ends of the veth pairs
      ansible.builtin.command: "sudo ip link set {{item.1.ep_in_pub}} netns {{ pub_namespace }}"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Ensure that NS interface is UP
      ansible.builtin.command: "sudo ip netns exec {{ item.1.vpc_name }} ip link set {{item.1.ep_in_ns}} up"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Ensure that public_NS interface is UP
      ansible.builtin.command: "sudo ip netns exec {{ pub_namespace }} ip link set {{item.1.ep_in_pub}} up"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Assign IP address to each veth endpoint interface- pub_ns
      ansible.builtin.command: "sudo ip netns exec {{ pub_namespace }} ip addr add {{ item.1.pub_ns_ep_ip }} dev {{item.1.ep_in_pub}} "
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Assign IP address to each veth endpoint interface- namespace
      ansible.builtin.command: "sudo ip netns exec {{ item.1.vpc_name }} ip addr add {{ item.1.ns_ep_ip }} dev {{item.1.ep_in_ns}}"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Add default route to the NS
      ansible.builtin.command: "sudo ip netns exec {{ item.1.vpc_name }} ip route add default via {{ item.1.pub_ns_ip }} dev {{item.1.ep_in_ns}}"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"

    - name: Configure the DNS
      ansible.builtin.command: "sudo ip netns exec {{ item.1.vpc_name }} sed -i 's/^nameserver 127\.0\.0\.53/nameserver 8.8.8.8/' /etc/resolv.conf"
      loop: "{{ vpc_details|subelements('vpcs') }}"
      loop_control:
        label: "{{ item.0.name }}"
