---
- name: Provision a new VM in a subnet
  hosts: localhost
  gather_facts: no
  vars:
    network_id: default
    
    vm_id: vm_test
    
    template_dir: "/home/vmadm/project/automation/jinja_templates"
    script_files_dir: "/home/vmadm/project/subnet_files"

    memory: 1024
    vcpu: 1

    interface_name: enp1s0
    vpc_incoming_port: 1234
    veth_vns_v_inf: 10.10.1.2
    public_router_ip: 2.2.2.2
    public_router_incoming_port: 1234
    vm_ip: 10.10.10.2/30
    vm_port: 8080

  tasks:   
    - name: Create the directory
      ansible.builtin.file:
        path: "{{ script_files_dir }}/{{ vm_id }}"
        state: directory

    - name: Create directory for VM
      become: yes
      file:
        path: "/var/lib/libvirt/images/{{ vm_id }}"
        state: directory
        mode: '0755'

    - name: Create QCOW2 image for VM
      become: yes
      command: qemu-img create -f qcow2 -F qcow2 -o backing_file=/var/lib/libvirt/images/jammy-server-cloudimg-amd64.img "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}.qcow2"

    - name: Resize image
      become: yes
      command: qemu-img resize "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}.qcow2" 12G

    - name: Create meta data files
      ansible.builtin.template:
        src: "{{ template_dir }}/meta_data.j2"
        dest: "/var/lib/libvirt/images/{{ vm_id }}/meta-data"
      become: yes

    - name: Read file and add 4 indents
      ansible.builtin.shell:
        cmd: |
          sed -i 's/^/    /' source.py
      args:
        executable: /bin/bash

    - name: Read input from cat command
      shell: cat source.py
      register: python_file_content
      changed_when: false

    - name: Create Jinja2 file
      template:
        src: "{{ template_dir }}/user_data.j2"
        dest: "/var/lib/libvirt/images/{{ vm_id }}/user-data"
      vars:
        content: "{{ python_file_content.stdout }}"


    - name: Run genisoimage command
      command: genisoimage -output "/var/lib/libvirt/images/{{ vm_id }}/{{ vm_id }}-cidata.iso" -volid cidata -joliet -rock meta-data user-data
      args:
        chdir: "/var/lib/libvirt/images/{{ vm_id }}"
      become: yes


    - name: Generate XML files for VM definitions
      template:
        src: "{{ template_dir }}/vm_definition.j2"
        dest: "{{ script_files_dir }}/{{ vm_id }}/{{ vm_id }}.xml"


    - name: create and start a VM
      command: virsh create  "{{ script_files_dir }}/{{ vm_id }}/{{ vm_id }}.xml"
   
    - name: Add a DNAT rule for the created VM
      become: yes
      command: "iptables -t nat -A PREROUTING -p tcp -d {{ vpc_interface_ip }} --dport {{ vpc_incoming_port }} -j DNAT --to-destination {{ vm_ip }}:{{ vm_port }}"

    - name: Add a DNAT rule for public to private router 
      become: yes
      command: "iptables -t nat -A PREROUTING -p tcp -d {{ public_router_ip }} --dport {{ public_router_port }} -j DNAT --to-destination {{ vpc_interface_ip }}:{{ vpc_incoming_port }}"